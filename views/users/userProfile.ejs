<%- include("../layouts/user/header") %>
<main class="main">
  <div class="page-header breadcrumb-wrap">
      <div class="container">
          <div class="breadcrumb">
              <a href="home" rel="nofollow">Home</a>
              <span></span> Pages
              <span></span> Account
          </div>
      </div>
  </div>
  <section class="pt-150 pb-150">
      <div class="container">
          <div class="row">
              <div class="col-lg-10 m-auto">
                  <div class="row">
                      <div class="col-md-4">
                          <div class="dashboard-menu">
                              <ul class="nav flex-column" role="tablist">
                                  <li class="nav-item">
                                      <a class="nav-link active" id="dashboard-tab" data-bs-toggle="tab" href="#dashboard" role="tab" aria-controls="dashboard" aria-selected="false"><i class="fi-rs-settings-sliders mr-10"></i>Dashboard</a>
                                  </li>
                                  <li class="nav-item">
                                      <a class="nav-link" id="orders-tab" data-bs-toggle="tab" href="#orders" role="tab" aria-controls="orders" aria-selected="false"><i class="fi-rs-shopping-bag mr-10"></i>Orders</a>
                                  </li>
                                  
                                  <li class="nav-item">
                                      <a class="nav-link" id="address-tab" data-bs-toggle="tab" href="#address" role="tab" aria-controls="address" aria-selected="true"><i class="fi-rs-marker mr-10"></i>My Address</a>
                                  </li>
                                  <li class="nav-item">
                                      <a class="nav-link" id="account-detail-tab" data-bs-toggle="tab" href="#account-detail" role="tab" aria-controls="account-detail" aria-selected="true"><i class="fi-rs-user mr-10"></i>Account details</a>
                                  </li>
                                  <li class="nav-item">
                                      <a class="nav-link" id="wallet-tab" data-bs-toggle="tab" href="#wallet" role="tab" aria-controls="wallet" aria-selected="true">  <i class="fas fa-wallet mr-10"></i>My Wallet</a>
                                  </li>
                                  <li class="nav-item">
                                      <a class="nav-link" href="/logout"><i class="fi-rs-sign-out mr-10"></i>Logout</a>
                                  </li>
                              </ul>
                          </div>
                      </div>
                      <div class="col-md-8">
                          <div class="tab-content dashboard-content">
                              <div class="tab-pane fade active show" id="dashboard" role="tabpanel" aria-labelledby="dashboard-tab">
                                  <div class="card">
                                     
                                      <div class="card-header">
                                    
                                              <h5 class="mb-0"> Hello <%= user.name %></h5>
                                        
                                      </div>
                                      
                                      <div class="card-body">
                                          <p>From your account dashboard. you can easily check &amp; view your <a href="#">recent orders</a>, manage your <a href="#">shipping and billing addresses</a> and <a href="#">edit your password and account details.</a></p>
                                      </div>
                                  </div>
                              </div>
                              <div class="tab-pane fade" id="orders" role="tabpanel" aria-labelledby="orders-tab">
                                  <div class="card">
                                      <div class="card-header">
                                          <h5 class="mb-0">Your Orders</h5>
                                      </div>
                                      <div class="card-body">
                                        <div class="table-responsive">
                                            <table class="table">
                                                <thead>
                                                    <tr>
                                                        <th>Order ID</th>
                                                        <th>Created Time</th>
                                                        <th>Status</th>
                                                        <th>Payment Method</th>
                                                        <th>Total Price</th>
                                                        <th>Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                  <% let displayedOrderIds = []; %>
                                                  <% order.sort((a, b) => new Date(b.createdOn) - new Date(a.createdOn)).forEach(orderItem => { %>
                                                    <% if (!displayedOrderIds.includes(orderItem._id)) { %>
                                                      <% 
                                                      let displayStatus;

                                                      // Helper function to normalize status checking
                                                      const normalizeStatus = (status) => status?.toLowerCase().trim() || '';

                                                      // Check if products array exists and has items
                                                      if (!orderItem.products || orderItem.products.length === 0) {
                                                        displayStatus = 'Pending';
                                                      } else {
                                                        // Check return status first (highest priority)
                                                        const hasReturnPending = orderItem.products.some(product => 
                                                            normalizeStatus(product.returnRequest) === 'pending');
                                                        
                                                        const hasReturnRejected = orderItem.products.some(product => 
                                                            normalizeStatus(product.returnRequest) === 'rejected');

                                                        // Check other statuses
                                                        const statusCounts = {
                                                            canceled: 0,
                                                            returned: 0,
                                                            completed: 0,
                                                            total: orderItem.products.length
                                                        };

                                                        // Count different statuses
                                                        orderItem.products.forEach(product => {
                                                            const status = normalizeStatus(product.status); 

                                                            if (status === 'canceled' || status === 'cancelled') {
                                                                statusCounts.canceled++;
                                                            }
                                                            if (status === 'returned') {
                                                                statusCounts.returned++;
                                                            }
                                                            if (status === 'completed') {
                                                                statusCounts.completed++;
                                                            }
                                                        });

                                                        // Determine status based on hierarchy
                                                        if (hasReturnPending) {
                                                            displayStatus = 'Return Pending';
                                                        } 
                                                        else if (hasReturnRejected) {
                                                            displayStatus = 'Return Rejected';
                                                        }
                                                        else if (orderItem.status === 'Failed') {
                                                            displayStatus = 'Failed';
                                                        }
                                                        else if (statusCounts.returned === statusCounts.total) {
                                                            displayStatus = 'Returned';
                                                        }
                                                        else if (statusCounts.canceled === statusCounts.total) {
                                                            displayStatus = 'Canceled';
                                                        }
                                                        else if (statusCounts.completed === statusCounts.total) {
                                                            displayStatus = 'Completed';
                                                        }
                                                        else {
                                                            // Check for mixed status
                                                            const uniqueStatuses = new Set(
                                                                orderItem.products.map(p => normalizeStatus(p.status))
                                                            );
                                                            displayStatus = uniqueStatuses.size > 1 ? 'Mixed' : 'Pending';
                                                        }
                                                      }
                                                    %>

                                                    <tr class="<%= displayStatus === 'Failed' ? 'table-danger' : '' %>">
                                                      <td>#<%= orderItem._id %></td>
                                                      <td><%= new Date(orderItem.date).toLocaleString() %></td>
                                                      <td>
                                                        <span class="badge <%= 
                                                          displayStatus === 'Failed' || displayStatus === 'Canceled'  || displayStatus === 'Return Rejected' ? 'bg-danger' : 
                                                          displayStatus === 'Pending' || displayStatus === 'Return Pending' ? 'bg-warning' :
                                                          displayStatus === 'Completed' ? 'bg-success' : 
                                                          displayStatus === 'Mixed' || displayStatus === 'Returned' ? 'bg-info' : '' %>">
                                                          <%= displayStatus %>
                                                        </span>
                                                      </td>
                                                      <td><%= orderItem.payment %></td>
                                                      <td>₹<%= orderItem.totalPrice %></td>
                                                      <td>₹<%= orderItem.totalPrice %></td>
                                                      <td>
                                                        <% 
                                                          const productId = orderItem.products?.[0]?.productId?._id || null;
                                                          const btnClass = displayStatus === 'Failed' ? 'btn-outline-danger' : 'btn-outline-primary';
                                                        %>
                                                        <% if (productId) { %>
                                                          <a href="/view-order/<%= orderItem._id %>/<%= productId %>" class="btn btn-small <%= btnClass %>">
                                                            View
                                                          </a>
                                                        <% } else { %>
                                                          <span class="text-danger">Invalid Product</span>
                                                        <% } %>
                                                      </td>

                                                    </tr>

                                                
                                                      <% displayedOrderIds.push(orderItem._id); %>
                                                    <% } %>
                                                  <% }) %>
                                                </tbody>
                                                
                                            </table>
                                        </div>
                                    </div>
                                    
                                  </div>
                                  
                                  <div class="pagination-area mt-30 mb-50">
                                      <nav aria-label="Page navigation example">
                                          <ul class="pagination justify-content-start">
                                              <% if (currentPage > 0) { %>
                                                  <li class="page-item">
                                                      <a class="page-link" href="?page=<%= currentPage - 1 %>">
                                                          <i class="material-icons">chevron_left</i>
                                                      </a>
                                                  </li>
                                              <% } %>
                                              
                                              <% for (let i = 0; i < totalPages; i++) { %>
                                                  <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                                                      <a class="page-link" href="?page=<%= i %>">
                                                          <%= (i + 1).toString().padStart(2, '0') %>
                                                      </a>
                                                  </li>
                                              <% } %>
                                              
                                              <% if (currentPage < totalPages - 1) { %>
                                                  <li class="page-item">
                                                      <a class="page-link" href="?page=<%= currentPage + 1 %>">
                                                          <i class="material-icons">chevron_right</i>
                                                      </a>
                                                  </li>
                                              <% } %>
                                          </ul>
                                      </nav>
                                  </div>
                              </div>
                              
                              
                              
                              <div class="tab-pane fade" id="address" role="tabpanel" aria-labelledby="address-tab">
                                  <div class="row">
                                      
                                    
                                      <% address.forEach(address => { %>
                                          <div class="col-lg-6">
                                            <div class="card mb-3 mb-lg-0">
                                              <div class="card-header">
                                                <h5 class="mb-0">Billing Address</h5>
                                              </div>
                                             
                                              <div class="card-body">
                                                <address><%= address.firstName %><br><%= address.city %><br> <%= address.zipcode %> <br></address>
                                                <p><%= address.state %></p>
                                                <a href="/edit-userProfileAddress?id=<%= address._id %>" class="btn-small">Edit</a>
                                                <span><a href="#" class="btn-small" style="color: red; padding-left: 30px;" onclick="deleteAddress('<%= address._id %>')" >Delete</a></span>
                                              </div>
                                            </div>
                                          </div>
                                        <% }) %>
                                    
                                  </div>
                                  <div class="row mt-4">
                                    <div class="col-12">

                                      <a href="/add-address" class="btn btn-danger">Add Address</a>
                                    </div>
                                  </div>
                                </div>
                               
                              <div class="tab-pane fade" id="account-detail" role="tabpanel" aria-labelledby="account-detail-tab">
                                  <div class="card">
                                      <div class="card-header">
                                          <h5>Account Details</h5>
                                      </div>
                                      <div class="card-body">
                                        
                                          <form method="post" >
                                              <div class="row">
                                                  <div class="form-group col-md-6">
                                                    <label>Name <span class="required">*</span></label>
                                                    <input required="" class="form-control square" name="name" type="text" value="<%= user.name %>" >
                                                  </div>
                                                  <div class="form-group col-md-12">
                                                    <label>Email  <span class="required">*</span></label>
                                                    <input required="" class="form-control square" name="email" type="email" value="<%= user.email %>" >
                                                  </div>
                                                  <div class="form-group col-md-12">
                                                    <label>Phone <span class="required">*</span></label>
                                                    <input required="" class="form-control square" name="mobile" type="number" value="<%= user.mobile %>" >
                                                  </div>
                                                  <div class="form-group col-md-12">
                                                    <label>Password <span class="required">*</span></label>
                                                    <input required="" class="form-control square" name="password" type="password" placeholder="* * * * * * * *">
                                                  </div>
                                                  <div>
                                                    <a href="/edit-userProfile?id=<%= user._id %>" class="btn btn-danger">Edit Profile</a>
                                                  </div>
                                                </div>
                                          </form>
                                      </div>
                                  </div>
                              </div>
                              <div class="tab-pane fade" id="wallet" role="tabpanel" aria-labelledby="wallet-tab">
                                <div class="container mt-5">
                                  <h2 class="text-center">My Wallet</h2>
                                  <!-- Wallet Balance -->
                                  <div class="card mb-4">
                                    <div class="card-body">
                                      <h5 class="card-title text-center">Wallet Balance</h5>
                                      <p class="card-text text-center font-weight-bold">
                                        <strong>₹<%= wallet.balance %> </strong>
                                      </p>
                                    </div>
                                  </div>
                              
                                  <div class="card">
                                    <div class="card-body">
                                      <h5 class="card-title">Wallet Details</h5>
                                      <p class="card-text mb-2">Transaction History:</p>
                              
                                      <ul class="list-group">
                                        <% wallet.transactions.forEach(transaction => { %>
                                          <li class="list-group-item d-flex justify-content-between align-items-center <%= transaction.transactionType === 'debit' ? 'list-group-item-danger' : 'list-group-item-success' %>">
                                            <span><%= new Date(transaction.date).toLocaleDateString() %></span>
                                            <span><%= transaction.transactionType %></span>
                                            <span>₹<%= transaction.amount %></span>
                                          </li>
                                        <% }); %>
                                      </ul>
                                    </div>
                                  </div>
                              
                                  <div class="pagination-area mt-30 mb-50">
                                    <nav aria-label="Page navigation example">
                                      <ul class="pagination justify-content-start">
                                        <% if (currentWalletPage > 0) { %>
                                          <li class="page-item">
                                            <a class="page-link" href="?walletPage=<%= currentWalletPage - 1 %>">
                                              <i class="material-icons">chevron_left</i>
                                            </a>
                                          </li>
                                        <% } %>
                              
                                        <% for (let i = 0; i < totalWalletPages; i++) { %>
                                          <li class="page-item <%= i === currentWalletPage ? 'active' : '' %>">
                                            <a class="page-link" href="?walletPage=<%= i %>"><%= (i + 1).toString().padStart(2, '0') %></a>
                                          </li>
                                        <% } %>
                              
                                        <% if (currentWalletPage < totalWalletPages - 1) { %>
                                          <li class="page-item">
                                            <a class="page-link" href="?walletPage=<%= currentWalletPage + 1 %>">
                                              <i class="material-icons">chevron_right</i>
                                            </a>
                                          </li>
                                        <% } %>
                                      </ul>
                                    </nav>
                                  </div>
                                </div>
                              </div>
                              
                              
                          
                      </div>
                  </div>
              </div>
          </div>
      </div>
      
  </section>
</main>
<div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel"
                  aria-hidden="true">
      <div class="modal-dialog">
              <div class="modal-content">
                  <div class="modal-header">
                      <h5 class="modal-title" id="confirmationModalLabel">Confirm Deletion</h5>             
                                     <button type="button" class="btn-close" data-bs-dismiss="modal"
                           aria-label="Close"></button>
                          </div>
                          <div class="modal-body">
                          <p>Are you sure you want to delete this item?</p>

                          </div>

                          <div class="modal-footer">
                              <button type="button" id="cancelBtn" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                              <a id="deleteButton" href="" class="btn btn-danger">Delete</a>
                  </div>
              </div>
      </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
function deleteAddress(addressId) {
console.log('Deleting address with ID:', addressId);

const deleteAddressModal = document.getElementById("confirmationModal");
console.log('Modal Element:', deleteAddressModal);

if (deleteAddressModal) {
  deleteAddressModal.style.display = "block";

  function hideModel() {
    const deleteAddressModal = document.getElementById("confirmationModal");
    deleteAddressModal.style.display = "none";
  }
  const confirmationModal = new bootstrap.Modal(
    document.getElementById("confirmationModal"),
    {
        backdrop: "static", // Prevent closing on click outside the modal
        keyboard: false, // Prevent closing with the keyboard Esc key
    }
);

// Display the modal
confirmationModal.show();
  function deleteAddressConfirmed() {
    hideModel();
    fetch(`/user-profile/delete-address?id=${addressId}`, {
      method: "DELETE",
      headers: {
        "Content-Type": "application/json",
      },
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
      })
      .then((data) => {
        if (data.success) {
          window.location.href = "/userProfile";
        }
      })
      .catch((error) => {
        console.error("Error deleting address", error);
      });
  }

  const deleteConfirmButton = document.getElementById("deleteButton");
  deleteConfirmButton.addEventListener("click", deleteAddressConfirmed);

  const cancelBtn = document.getElementById("cancelBtn");
  cancelBtn.addEventListener("click", hideModel);
} else {
  console.error('Modal element not found');
}
}


</script>



<%- include("../layouts/user/footer") %>

